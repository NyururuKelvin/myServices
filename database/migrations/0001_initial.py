# Generated by Django 3.1.3 on 2020-11-03 10:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('description', models.TextField()),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('UPDATED_AT', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('price', models.IntegerField()),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('UPDATED_AT', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_services', to='database.company')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('UPDATED_AT', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkingHour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_from', models.TimeField()),
                ('_to', models.TimeField()),
                ('day', models.IntegerField()),
                ('lunch_start', models.TimeField(null=True)),
                ('lunch_end', models.TimeField(null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='working_hours', to='database.company')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField()),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('UPDATED_AT', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='database.companyservice')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('UPDATED_AT', models.DateTimeField(auto_now=True)),
                ('serviceType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='database.servicetype')),
            ],
        ),
        migrations.AddField(
            model_name='companyservice',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_services', to='database.service'),
        ),
    ]
